-- MySQL Script generated by MySQL Workbench
-- Fri Feb 16 17:10:29 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema RSVier
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema RSVier
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `RSVier` DEFAULT CHARACTER SET utf8 ;
USE `RSVier` ;

-- -----------------------------------------------------
-- Table `RSVier`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RSVier`.`customer` ;

CREATE TABLE IF NOT EXISTS `RSVier`.`customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(50) NOT NULL,
  `last_name` VARCHAR(50) NOT NULL,
  `last_name_preposition` VARCHAR(10) NULL,
  `email` VARCHAR(80) NULL,
  `phone_number` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RSVier`.`account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RSVier`.`account` ;

CREATE TABLE IF NOT EXISTS `RSVier`.`account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `password` TEXT NOT NULL,
  `owner_type` VARCHAR(10) NOT NULL,
  `customer_id` INT NOT NULL,
  `active` TINYINT NOT NULL DEFAULT 1 COMMENT '1 = true, 0 = false',
  `hash` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `account_owner_customer_id_idx` (`customer_id` ASC),
  CONSTRAINT `account_owner_customer_id`
    FOREIGN KEY (`customer_id`)
    REFERENCES `RSVier`.`customer` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RSVier`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RSVier`.`order` ;

CREATE TABLE IF NOT EXISTS `RSVier`.`order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `total_price` DECIMAL(8,2) NOT NULL,
  `total_products` INT NOT NULL,
  `shipped_status` TINYINT unsigned NOT NULL,
  `customerID` INT NOT NULL,
  `order_completed` TINYINT unsigned NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `customerID_idx` (`customerID` ASC),
  CONSTRAINT `customerID`
    FOREIGN KEY (`customerID`)
    REFERENCES `RSVier`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RSVier`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RSVier`.`product` ;

CREATE TABLE IF NOT EXISTS `RSVier`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(70) NOT NULL,
  `price` DECIMAL(6,2) NOT NULL,
  `stock_quantity` INT NOT NULL,
  `produced_year` INT NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `grape_variety` VARCHAR(90) NOT NULL,
  `alcohol_percentage` DECIMAL(3,1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RSVier`.`order_line_item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RSVier`.`order_line_item` ;

CREATE TABLE IF NOT EXISTS `RSVier`.`order_line_item` (
  `productID` INT NOT NULL,
  `orderID` INT NOT NULL,
  `quantity` INT NOT NULL,
  INDEX `product_idx` (`productID` ASC),
  INDEX `order_idx` (`orderID` ASC),
  CONSTRAINT `product`
    FOREIGN KEY (`productID`)
    REFERENCES `RSVier`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order`
    FOREIGN KEY (`orderID`)
    REFERENCES `RSVier`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RSVier`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RSVier`.`address` ;

CREATE TABLE IF NOT EXISTS `RSVier`.`address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `postal_code` VARCHAR(6) NOT NULL,
  `street_name` VARCHAR(65) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `house_number` INT NOT NULL,
  `house_number_addition` VARCHAR(5),
  `address_type` VARCHAR(10) NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `customer's address_idx` (`customer_id` ASC),
  CONSTRAINT `customer's address`
    FOREIGN KEY (`customer_id`)
    REFERENCES `RSVier`.`customer` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- USER PRIVILEGES --

SET SQL_MODE = '';
GRANT USAGE ON *.* TO 'GeertL';
 DROP USER 'GeertL';
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'GeertL' IDENTIFIED BY 'k44sBl0kJe$';

GRANT ALL ON `RSVier`.* TO 'GeertL';
GRANT SELECT ON TABLE `RSVier`.* TO 'GeertL';
GRANT SELECT, INSERT, TRIGGER ON TABLE `RSVier`.* TO 'GeertL';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `RSVier`.* TO 'GeertL';
GRANT EXECUTE ON `RSVier`.* TO 'GeertL';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- DATA POPULATION --

INSERT INTO customer (id, first_name, last_name) VALUES (1, 'Onne', 'Dallinga');
INSERT INTO account (id, username, PASSWORD, owner_type, customer_id, active, hash) VALUES (1, 'Onne', 'Hello', 'ADMIN', 1, 1, 'None');
INSERT INTO customer (id, first_name, last_name) VALUES (2, 'Piet', 'Pieters');
INSERT INTO account (id, username, PASSWORD, owner_type, customer_id, active, hash) VALUES (2, 'Piet', 'Piet', 'NOTADMIN', 2, 2, 'None');

INSERT INTO product (id, name, price, stock_quantity, produced_year, country, grape_variety, alcohol_percentage)
            VALUES (1, ',El Rioja Diablo', 6.66, 14, 2017, 'Spain', 'Rioja', 13.0);
INSERT INTO product (id, name, price, stock_quantity, produced_year, country, grape_variety, alcohol_percentage)
            VALUES (2, 'Ech\' Druuvenspul', 1.45, 109, 2015, 'Netherlands', '\'n Rooie Druuf', 10.9);
INSERT INTO product (id, name, price, stock_quantity, produced_year, country, grape_variety, alcohol_percentage)
            VALUES (3, 'Chateaux Degoutant', 3.5, 8, 2017, 'France', 'Merlot', 9.4);
INSERT INTO product (id, name, price, stock_quantity, produced_year, country, grape_variety, alcohol_percentage)
            VALUES (4, 'Jacob\'s Creek Chardonnay', 6.69, 57, 2014, 'Australia', 'Chardonnay', 13.1);

INSERT INTO `order` (id, total_price, total_products, shipped_status, customerID, order_completed)
            VALUES (1, 19.98, 3, TRUE, 1, TRUE);
INSERT INTO order_line_item (productID, orderID, quantity)
            VALUES (1, 1, 3);
INSERT INTO `order` (id, total_price, total_products, shipped_status, customerID, order_completed)
            VALUES (2, 22.68, 7, FALSE, 2, FALSE);
INSERT INTO order_line_item (productID, orderID, quantity)
            VALUES (2, 2, 4);
INSERT INTO order_line_item (productID, orderID, quantity)
            VALUES (4, 2, 2);
INSERT INTO order_line_item (productID, orderID, quantity)
            VALUES (3, 2, 1);

INSERT INTO address (id, postal_code, street_name, city, house_number, house_number_addition, address_type, customer_id)
            VALUES (1, '7006SZ', 'Pannenkoekdreef', 'Rotterdam', 14, NULL, "del", 1);
INSERT INTO address (id, postal_code, street_name, city, house_number, house_number_addition, address_type, customer_id)
            VALUES (2, '1339CX', 'Kruisbergseweg', 'Zaandam', 199, 'b', "del", 2);
INSERT INTO address (id, postal_code, street_name, city, house_number, house_number_addition, address_type, customer_id)
            VALUES (3, '5711OR', 'Mussoliniplein', 'St. Oedenrode', 7, NULL, "inv", 2);
